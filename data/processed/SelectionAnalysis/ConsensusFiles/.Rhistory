barcodes_map <- extract_tables(map, method = "lattice", output = "data.frame")
barcodes_map
barcodes_map <- extract_tables(map, method = "stream", output = "data.frame")
barcodes_map
barcodes_map <- extract_tables(map, method = "stream")
barcodes_map
barcodes_map <- extract_tables(map, method = "decide")
barcodes_map
barcodes_map <- extract_tables(map, method = "lattice")
barcodes_map
barcodes_map <- extract_tables(map, method = "lattice")[[1]]
barcodes_map
barcodes_map <- extract_tables(map, method = "lattice", output = "data.frame")[[1]]
barcodes_map
as.data.frame(barcodes_map)
barcodes_map
barcodes_map <- extract_tables(map, method = "lattice")[[1]]
barcodes_map
as.data.frame(barcodes_map)
barcodes_map <- barcodes_map[-1,]
barcodes_map
barcodes_map <- extract_tables(map, method = "lattice")[[1]]
barcodes_map <- as.data.frame(barcodes_map)
barcodes_map <- barcodes_map[-1,]
barcodes_map
barcodes_map <- select(barcodes_map, -V7, -V8, -V9, -V10, -V11)
barcodes_map
barcodes_i7
barcodes_i5
i5_headers <- barcodes_i5[1,]
i5_headers
colnames(barcodes_i5) <- i5_headers
barcodes_i5
barcodes_i5 <- barcodes_i5[-c(1, 2),]
barcodes_i5
i5_headers
barcodes_i5 <- extract_tables(i5, pages = 1, output = "data.frame")[[1]]
colnames(barcodes_i5) <- c("i5_index_name", "bases_in_adapter", "i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500", "i5_bases_for_sampleSheet_iSeqMiniSeqNextSeqHiSeq3000-4000")
barcodes_i5
barcodes_i5 <- barcodes_i5[-c(1, 2),]
barcodes_i5
barcodes_i5 <- mutate(barcodes_i5, index = strsplit(i5_index_name, "]")[[2]])
barcodes_i5
barcodes_i5 <- mutate(barcodes_i5, index = strsplit(i5_index_name, "]")[[2]])
barcodes_i5 <- mutate(barcodes_i5, index = strsplit(i5_index_name, "]"))
barcodes_i5
barcodes_i5 <- mutate(barcodes_i5, index = paste0("H", strsplit(i5_index_name, "]")[[2]]))
barcodes_i5 <- mutate(barcodes_i5, index = paste0("H", strsplit(i5_index_name, "]", 2)))
barcodes_i5
barcodes_i5 <- mutate(barcodes_i5, index = paste0(map_chr(str_split(i5_index_name, "]"), 2), "]"))
barcodes_i5
barcodes_i5 <- mutate(barcodes_i5, index = paste0("H", map_chr(str_split(i5_index_name, "]"), 2)))
barcodes_i5
barcodes_i5 <- transmutate(barcodes_i5, i5_index_name = paste0("H", map_chr(str_split(i5_index_name, "]"), 2)))
barcodes_i5 <- transmute(barcodes_i5, i5_index_name = paste0("H", map_chr(str_split(i5_index_name, "]"), 2)))
barcodes_i5
barcodes_i5 <- extract_tables(i5, pages = 1, output = "data.frame")[[1]]
colnames(barcodes_i5) <- c("i5_index_name", "bases_in_adapter", "i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500", "i5_bases_for_sampleSheet_iSeqMiniSeqNextSeqHiSeq3000-4000")
barcodes_i5 <- barcodes_i5[-c(1, 2),]
barcodes_i5 %>% mutate(barcodes_i5, index = paste0("H", map_chr(str_split(i5_index_name, "]"), 2))) %>% select(-i5_index_name) -> barcodes_i5
barcodes_i5
barcodes_i5 %>% mutate(index = paste0("H", map_chr(str_split(i5_index_name, "]"), 2))) %>% select(-i5_index_name) -> barcodes_i5
barcodes_i5
barcodes_i7
barcodes_i7 <- extract_tables(i7, pages = 1, output = "data.frame", method = "stream")[[1]]
barcodes_i7
barcodes_i7 %>% mutate(index = paste0("H", map_chr(str_split(i7.Index.Name, "]"), 2))) %>% select(-i7.Index.Name) -> barcodes_i7
barcodes_i7
barcodes_map
barcodes_map %>% spread(V1)
barcodes_map %>% tidyr::spread(V1)
barcodes_map %>% tidyr::spread(V1, V2)
barcodes_map %>% mutate(C1 = map_chr(str_split(V1, "\r"), 1)), C2 = map_chr(str_split(V1, "\r"), 2)))
barcodes_map %>% mutate(C1 = map_chr(str_split(V1, "\r"), 1)), C2 = map_chr(str_split(V1, "\r"), 2)))
barcodes_map %>% mutate(C1 = map_chr(str_split(V1, "\r"), 1), C2 = map_chr(str_split(V1, "\r"), 2))
map <- read_csv("/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_plateMap.csv")
map
map <- read_csv("/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_plateMap.csv", row.names = 1)
map <- read.csv("/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_plateMap.csv", row.names = 1, header = TRUE)
map
t(map)
a
as.data.frame(t(map))
barcodes_map <- as.data.frame(t(map))
barcodes_map
barcodes_i5
barcodes_i7
barcodes_map
barcodes_i7
barcodes_i7
barcodes_i5
barcodes_i7
barcodes_i7 %>% select(-i7.Bases.for.Sample.Sheet) -> barcodes_i7
barcodes_i7
barcodes_i5
barcodes_i5 %>% select(`i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`, index) %>% rename(barcode_for_sampleSheet = `i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`) -> barcodes_i5
barcodes_i5
barcodes_i7
barcodes_map
unlist(barcodes_map)
as.vector(unlist(barcodes_map))
lapply(barcodes_map, print())
lapply(barcodes_map, print(.))
lapply(barcodes_map, print(x))
lapply(barcodes_map, print
)
edit <- function(vec)
{
vec <- substr(vec, 1, nchar(vec)-1)
vec <- gsub(pattern = " ", replacement = "_")
}
edit <- function(vec)
{
vec <- substr(vec, 1, nchar(vec)-1)
vec <- gsub(pattern = " ", replacement = "_")
return(vec)
}
edit("hello hello ")
edit <- function(vec)
{
vec <- substr(vec, 1, nchar(vec)-1)
vec <- gsub(vec, pattern = " ", replacement = "_")
return(vec)
}
edit("hello hello ")
lapply(barcodes_map, edit)
lapply(barcodes_map, print)
df <- data.frame(c(1,2,3), c(2,3,4))
df[] <- lapply(df, function(x) paste(x,"x", sep=""))
df
t(map)
gsub(t(map), " ", "_")
gsub(t(map), pattern = " ", replacement = "_")
substr(t(map), -1)
substr(t(map), 1, 8)
substr(t(map), 1, 9)
map <- read.csv("/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_plateMap.csv", row.names = 1, header = TRUE)
map <- gsub(t(map), pattern = " ", replacement = "_")
map <- substr(map, 1, 9)
barcodes_map <- as.data.frame(map)
barcodes_map
barcodes_list <- as.vector(unlist(barcodes_map))
barcodes_list
barcodes_df <- as.data.frame(indices = barcodes_list)
barcodes_df <- as.data.frame(barcodes_list)
barcodes_df
barcodes_df <- rename(barcodes_df, indices = barcodes_list)
barcodes_df
barcodes_df %>% tidyr::separate(indices, into = c("index1","index2"), sep = "_", remove = FALSE, fill = "right")
barcodes_df %>% tidyr::separate(indices, into = c("index1","index2"), sep = "_", remove = FALSE, fill = "right") -> barcodes_df
barcodes_i7
barcodes_df
barcodes_i7
barcodes_i7 %>% select(-i7.Bases.for.Sample.Sheet) %>% rename(index_i7 = index) -> barcodes_i7
i7 <- "/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_i7_barcodes.pdf"
barcodes_i7 <- extract_tables(i7, pages = 1, output = "data.frame", method = "stream")[[1]]
barcodes_i7 %>% mutate(index = paste0("H", map_chr(str_split(i7.Index.Name, "]"), 2))) %>% select(-i7.Index.Name) -> barcodes_i7
barcodes_i7 %>% select(-i7.Bases.for.Sample.Sheet) %>% rename(index_i7 = index) -> barcodes_i7
i5 <- "/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_i5_barcodes.pdf"
barcodes_i5 <- extract_tables(i5, pages = 1, output = "data.frame")[[1]]
colnames(barcodes_i5) <- c("i5_index_name", "bases_in_adapter", "i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500", "i5_bases_for_sampleSheet_iSeqMiniSeqNextSeqHiSeq3000-4000")
barcodes_i5 <- barcodes_i5[-c(1, 2),]
barcodes_i5 %>% mutate(index = paste0("H", map_chr(str_split(i5_index_name, "]"), 2))) %>% select(-i5_index_name) -> barcodes_i5
barcodes_df
left_join(barcodes_df, barcodes_i7, by = "index_i7")
barcodes_df
barcodes_list <- as.vector(unlist(barcodes_map))
barcodes_df <- as.data.frame(barcodes_list)
barcodes_df <- rename(barcodes_df, indices = barcodes_list)
barcodes_df %>% tidyr::separate(indices, into = c("index_i7","index_i5"), sep = "_", remove = FALSE, fill = "right") -> barcodes_df
left_join(barcodes_df, barcodes_i7, by = "index_i7")
left_join(barcodes_df, barcodes_i5, by = "index_i5")
barcodes_i5
barcodes_i5 %>% select(`i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`, index) %>% rename(barcode_for_sampleSheet = `i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`, index_i5 = index) -> barcodes_i5
barcodes_i5
left_join(barcodes_df, barcodes_i5, by = "index_i5")
barcodes_df <- left_join(barcodes_df, barcodes_i7, by = "index_i7")
barcodes_df <- left_join(barcodes_df, barcodes_i5, by = "index_i5")
barcodes_df
barcodes_i7
i7 <- "/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_i7_barcodes.pdf"
barcodes_i7 <- extract_tables(i7, pages = 1, output = "data.frame", method = "stream")[[1]]
barcodes_i7 %>% mutate(index = paste0("H", map_chr(str_split(i7.Index.Name, "]"), 2))) %>% select(-i7.Index.Name) -> barcodes_i7
barcodes_i7 %>% select(-i7.Bases.for.Sample.Sheet) %>% rename(index_i7 = index, adapter_i7 = Bases.in.Adapter) -> barcodes_i7
i5 <- "/Users/avalesano/Documents/MSTP/LauringLab/MatlabSequencingStudy/Illumina_96indices_CD_i5_barcodes.pdf"
barcodes_i5 <- extract_tables(i5, pages = 1, output = "data.frame")[[1]]
colnames(barcodes_i5) <- c("i5_index_name", "bases_in_adapter", "i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500", "i5_bases_for_sampleSheet_iSeqMiniSeqNextSeqHiSeq3000-4000")
barcodes_i5 <- barcodes_i5[-c(1, 2),]
barcodes_i5 %>% mutate(index = paste0("H", map_chr(str_split(i5_index_name, "]"), 2))) %>% select(-i5_index_name) -> barcodes_i5
barcodes_i5 %>% select(`i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`, index) %>% rename(adapter_i5 = `i5_bases_for_sampleSheet_NovaSeqMiSeqHiSeq2000-2500`, index_i5 = index) -> barcodes_i5
barcodes_list <- as.vector(unlist(barcodes_map))
barcodes_df <- as.data.frame(barcodes_list)
barcodes_df <- rename(barcodes_df, indices = barcodes_list)
barcodes_df %>% tidyr::separate(indices, into = c("index_i7","index_i5"), sep = "_", remove = FALSE, fill = "right") -> barcodes_df
barcodes_df <- left_join(barcodes_df, barcodes_i7, by = "index_i7")
barcodes_df <- left_join(barcodes_df, barcodes_i5, by = "index_i5")
barcodes_df
barcodes_df <- mutate(adapter_pair = paste0(adapter_i7, "-", adapter_i5))
barcodes_df
barcodes_df <- mutate(adapter_pair = paste0(adapter_i7, "-", adapter_i5))
barcodes_df
barcodes_df$adapter_i7
barcodes_df$adapter_i5
barcodes_df <- mutate(adapter_pair = paste0(adapter_i7, "-", adapter_i5))
barcodes_df <- mutate(adapter_pair = paste0(adapter_i7, "-"))
barcodes_df <- mutate(adapter_pair = paste0("-"))
barcodes_df <- mutate(barcodes_df, adapter_pair = paste0(adapter_i7, "-", adapter_i5))
barcodes_df
barcodes_map
barcodes_map
barcodes_df
for(index in barcodes_df$indices)
{
col <- colnames(barcodes_map)[apply(barcodes_map, 2, function(u) any(u == index))]
row <- row.names(barcodes_map)[apply(barcodes_map, 1, function(u) any(u == index))]
print(paste0(row, "_", col))
}
barcodes_df <- mutate(barcodes_df, adapter_pair = paste0(adapter_i7, "-", adapter_i5), location = NA)
barcodes_df
for(index in barcodes_df$indices)
{
col <- colnames(barcodes_map)[apply(barcodes_map, 2, function(u) any(u == index))]
row <- row.names(barcodes_map)[apply(barcodes_map, 1, function(u) any(u == index))]
location <- paste0(row, "_", col)
barcodes_df$location[match(x = index, barcodes_df$indices)] <- location
}
barcodes_df
Sabin2_length <- 7439
primers <- read_csv("/Users/avalesano/Desktop/primers.csv")
library(tidyverse)
primers <- read_csv("/Users/avalesano/Desktop/primers.csv")
primers
primers <- read_csv("/Users/avalesano/Desktop/primers.csv")
primers
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment))
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment)) +
ylab("") +
xlab("Position on OPV2 Genome")
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment)) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank())
primer_scheme
ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment)) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal()
ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment)) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_void()
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment)) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme
library(wesanderson)
palette <- wesanderson::wes_palette("Darjeeling1")
palette
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white"))
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme_minimal() + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4], size = 3) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment, size = 3), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment, size = 1.5), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment, size = 1.5), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, aes(x = Start, y = Segment, xend = Stop, yend = Segment, size = 0.2), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, size = 1, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.5, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
theme(legend.position = "right")  + theme(panel.grid.major = element_line(colour = "white")) +
scale_color_manual(name = "Segment", values = palette[1:4])
primer_scheme
ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome")
ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
primer_scheme <- ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.ticks.y = element_blank(), axis.line.x = element_blank(), axis.line.y = element_blank())
primer_scheme
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_blank())
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x.bottom = element_blank())
ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x.bottom = element_blank())
ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") + xlab("Position on OPV2 Genome") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
primer_scheme <- ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme
ggplot() + theme_minimal() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome")
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome")
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome") + theme(panel.border = element_blank())
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme <- ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000))
primer_scheme
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(0, 4), expand = c(0, 0))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 0))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 4), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 2), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 1), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits=c(1, 4), expand = c(0, 0.5), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(1, 3), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(1), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0,1), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(1,1.5), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(1,3), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0.5, 3.5), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0.5, 1), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0.5, 1), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0.5, 0.75), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0, 0.5), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0, 3), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
scale_y_continuous(limits = c(1, 4), expand = c(0, 5), breaks = c(1, 2, 3, 4))
ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
ylim(1, 4)
primer_scheme <- ggplot() + theme_bw() + geom_segment(data = primers, size = 1.2, aes(x = Start, y = Segment, xend = Stop, yend = Segment), color = palette[1:4]) + ylab("Segment") +
xlab("Position on OPV2 Genome") +
theme(panel.border = element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000)) +
ylim(1, 4)
ggsave(primer_scheme, filename = "segments.pdf", device = "pdf", width = 2, height = 2)
ggsave(primer_scheme, filename = "/Users/avalesano/Desktop/segments.pdf", device = "pdf", width = 2, height = 2)
sum()==0
setwd("/Users/avalesano/Documents/MSTP/LauringLab/Poliovirus_Intrahost/data/processed/SelectionAnalysis/ConsensusFiles/")
library(phylotools)
install.packages("phylotools")
library(phylotools)
poly <- read.fasta("MatlabBioSampleConsensus_Coding_mOPV2.fasta")
dat2phylip(poly, "MatlabBioSampleConsensus_Coding_mOPV2.phylip")
poly <- read.fasta("test.fasta")
poly <- read.fasta("test.fasta")
dat2phylip(poly, "test.phylip")
